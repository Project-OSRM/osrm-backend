// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_POSITION_OSRM_ENGINE_API_FBRESULT_H_
#define FLATBUFFERS_GENERATED_POSITION_OSRM_ENGINE_API_FBRESULT_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace osrm {
namespace engine {
namespace api {
namespace fbresult {

struct Position;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Position FLATBUFFERS_FINAL_CLASS {
 private:
  float longitude_;
  float latitude_;

 public:
  Position()
      : longitude_(0),
        latitude_(0) {
  }
  Position(float _longitude, float _latitude)
      : longitude_(::flatbuffers::EndianScalar(_longitude)),
        latitude_(::flatbuffers::EndianScalar(_latitude)) {
  }
  float longitude() const {
    return ::flatbuffers::EndianScalar(longitude_);
  }
  float latitude() const {
    return ::flatbuffers::EndianScalar(latitude_);
  }
};
FLATBUFFERS_STRUCT_END(Position, 8);

}  // namespace fbresult
}  // namespace api
}  // namespace engine
}  // namespace osrm

#endif  // FLATBUFFERS_GENERATED_POSITION_OSRM_ENGINE_API_FBRESULT_H_
